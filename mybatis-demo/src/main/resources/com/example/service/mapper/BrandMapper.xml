<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.BrandMapper">

    <resultMap id="brandResultMap" type="brand">
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>

    <select id="selectAll" resultMap="brandResultMap">
        select * from tb_brand
    </select>
    <!--    <sql id="brand_column">-->
    <!--        id, brand_name as brandName,company_name as companyName,-->
    <!--        ordered, description,status-->
    <!--    </sql>-->

    <!--    <select id="selectAll" resultType="Brand">-->
    <!--        select <include refid="brand_column"/> from tb_brand-->
    <!--    </select>-->
    <!--    <select id="selectAll" resultType="Brand">-->
    <!--        select id, brand_name as brandName,company_name as companyName,-->
    <!--        ordered, description,status from tb_brand-->
    <!--    </select>-->

    <!--    #{}:会被替换成？，防止sql注入  作为参数传入
            ${}：拼接sql，会sql注入
                     当参数是表名、列名不固定可以使用
    -->
    <select id="selectById" resultMap="brandResultMap">
        select * from tb_brand where id = #{id}
    </select>
    <select id="selectByCondition" resultMap="brandResultMap">
        select * from tb_brand
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="companyName != null and companyName != ''">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != ''">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>
    <!--    <select id="selectByConditionSingle" resultMap="brandResultMap">-->
    <!--        select * from tb_brand where-->
    <!--        <choose>-->
    <!--            <when test="status != null">-->
    <!--                status = #{status}-->
    <!--            </when>-->
    <!--            <when test="companyName != null and companyName != ''">-->
    <!--                company_name like #{companyName}-->
    <!--            </when>-->
    <!--            <when test="brandName != null and brandName !=''">-->
    <!--                brand_name like #{brandName}-->
    <!--            </when>-->
    <!--            <otherwise>-->
    <!--                1=1-->
    <!--            </otherwise>-->
    <!--        </choose>-->
    <!--    </select>-->
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select * from tb_brand
        <where>
            <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="companyName != null and companyName != ''">
                    company_name like #{companyName}
                </when>
                <when test="brandName != null and brandName !=''">
                    brand_name like #{brandName}
                </when>
            </choose>
        </where>
    </select>
    <!--    useGeneratedKeys: 使用自动生成主键
            keyProperty:指向主键对应的属性名称（即类中属性名）
    -->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand(brand_name,company_name,ordered,description,status)
        values(#{brandName}, #{companyName}, #{ordered},#{description},#{status})
    </insert>
    <!--    <update id="update">-->
    <!--        update tb_brand set brand_name=#{brandName},company_name=#{companyName},-->
    <!--        ordered=#{ordered},description=#{description},status=#{status}-->
    <!--        where id=#{id}-->
    <!--    </update>-->
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName!=null and brandName!=''">
                brand_name=#{brandName},
            </if>
            <if test="companyName!=null and companyName!=''">
                company_name=#{companyName},
            </if>
            <if test="ordered!=null">
                ordered=#{ordered},
            </if>
            <if test="description!=null and description!=''">
                description=#{description},
            </if>
            <if test="status!=null">
                status=#{status}
            </if>
        </set>
        where id=#{id}
    </update>
    <delete id="deleteById">
        delete from tb_brand where id=#{id}
    </delete>

    <delete id="deleteByIds">
        delete from tb_brand where id in (
        <foreach collection="ids" item="a" separator=",">
            #{a}
        </foreach>
        )
    </delete>
</mapper>